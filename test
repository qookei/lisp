(define (list . values)
    values)

(define (map fn lst)
    (if (nil? lst)
	'()
	(cons (fn (car lst))
	      (map fn (cdr lst)))))

(define (cadr v)
    (car (cdr v)))

(define-macro (let bindings body)
    (cons
     ;; Lambda to introduce bindings
     (list 'lambda
	   (map car bindings)
	   body)
     ;; Parameter list for lambda
     (map cadr bindings)))

(let ((a 1)
      (b 2))
  (+ a b))
